<launch>
<!-- LIDAR scan init -->
	<node name="urg_node" pkg="urg_node" type="urg_node" >
	    <param name="ip_address" value="128.46.112.200"/>
	</node>    

<!-- Load a Map  -->
	<arg name="map_file" default="/home/nvidia/wsps/rally_ws/src/wall_follower/resources/map/KNOY_speedway.yaml"/>
	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

	<!-- static transform -->
	<node pkg="tf" type="static_transform_publisher" name="base_to_laser" args="0.0 0.0 0.0 0.0 0.0 0.0 /base /laser 100" />
	
	<!-- use hector_mapping for providing odometry to amcl  -->
	<arg name="map_size" default="2048"/>
	<arg name="map_resolution" default="0.05"/>

	<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
		<remap from="map" to="/mapcurrent" />
		<param name="map_frame" value="mapcurrent"/> 
		<param name="base_frame" value="base"/> 
		<param name="odom_frame" value="hector_odom"/>

		<param name="use_tf_scan_transformation" value="true"/>
		<param name="use_tf_pose_start_estimate" value="false"/>
		<param name="pub_map_odom_transform" value="false"/> 
		<param name="pub_odometry" value="true" />

		<param name="map_resolution" value="$(arg map_resolution)"/>
		<param name="map_size" value="$(arg map_size)"/>
		<param name="scan_topic" value="scan"/>
		<param name="tf_map_scanmatch_transform_frame_name" value="hector_odom" />
	</node>
	
	<!-- establish transform between odometry and base -->
	<node name="odomtransformer" pkg="wall_follower" type="odom.py" output="screen">
		<param name="odom_input" value="/scanmatch_odom" />
		<param name="tf_output" value="/base" />
	</node>

	<!-- localization using amcl -->
	<node pkg="amcl" type="amcl" name="amcl">
		<param name="base_frame_id" value="/base" />
		<param name="global_frame_id" value="/map" />
		<param name="odom_frame_id" value="/scanmatch_odom" />
	    <param name="odom_model_type" value="omni" />
	</node>
	
	<!-- Run map_follower -->
	<node pkg="wall_follower" type="map_booster.py" name="map_follower" output="screen" /> 
		
		
	<!-- Visualisation RVIZ -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d /home/nvidia/wsps/rally_ws/src/wall_follower/resources/rvizconf.rviz"/>

	<!-- python script: fetch way points and display on map -->
	<node pkg="wall_follower" type="waypoint.py" output="screen" name="waypoint" />
	
</launch>
